{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2025-04-20T00:33:42.009684+00:00",
  "repo": "NLnetLabs/incremental-deleg",
  "labels": [
    {
      "name": "bug",
      "description": "Something isn't working",
      "color": "d73a4a"
    },
    {
      "name": "documentation",
      "description": "Improvements or additions to documentation",
      "color": "0075ca"
    },
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "good first issue",
      "description": "Good for newcomers",
      "color": "7057ff"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "invalid",
      "description": "This doesn't seem right",
      "color": "e4e669"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "ffffff"
    }
  ],
  "issues": [
    {
      "number": 3,
      "id": "I_kwDOMN-KqM6b4tJm",
      "title": "\"Incremental deleg\" vs \"Incremental delegation\"",
      "url": "https://github.com/NLnetLabs/incremental-deleg/issues/3",
      "state": "CLOSED",
      "author": "moonshiner",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "I've been reading through the document more carefully and I do like this. \r\nBut I keep bumping against how similar these terms are.  have you considered calling the former \"ideleg\" ? \r\n\r\nalso \"Delegation\" - does the 9499 definition not as good as the one in STD13 for Legacy Delegations?\r\n\r\nI have some minor edits i will send along, but I also have some other thoughts - like moving the motivation (1.2->1.4) out of the intro into its own section\r\n\r\nmore as I do some experiments\r\n\r\n",
      "createdAt": "2024-10-25T23:13:11Z",
      "updatedAt": "2025-03-03T07:44:02Z",
      "closedAt": "2025-03-03T07:44:01Z",
      "comments": [
        {
          "author": "moonshiner",
          "authorAssociation": "COLLABORATOR",
          "body": "Maybe \"Incremental zone delegation\" ?  it's more accurate and perhaps makes the difference with \"incremental deleg\" clearer?\n",
          "createdAt": "2025-01-16T12:26:42Z",
          "updatedAt": "2025-01-16T12:26:42Z"
        },
        {
          "author": "Philip-NLnetLabs",
          "authorAssociation": "MEMBER",
          "body": "For legacy delegations, the 9499 definition does not make it clear that we only refer to STD13. The 9499 is wide enough that it may include deleg.\n\nThe naming is very annoying. And referring to the other proposal as the DELEG type proposal also doesn't work anymore. Is there confusion between 'Incremental deleg' and 'Incremental delegation'? Usually it is quite clear from the context was is meant.",
          "createdAt": "2025-01-17T07:53:48Z",
          "updatedAt": "2025-01-17T07:53:48Z"
        },
        {
          "author": "moonshiner",
          "authorAssociation": "COLLABORATOR",
          "body": "the more I thought about this the more I was wrong.  ",
          "createdAt": "2025-03-03T07:44:01Z",
          "updatedAt": "2025-03-03T07:44:01Z"
        }
      ]
    },
    {
      "number": 5,
      "id": "I_kwDOMN-KqM6sE0Uj",
      "title": "Positive response to _deleg probing query",
      "url": "https://github.com/NLnetLabs/incremental-deleg/issues/5",
      "state": "CLOSED",
      "author": "Philip-NLnetLabs",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "The current text is:\n3. The `_deleg` label does exist within the zone and contains data. \n   A NOERROR response is returned with an A RRset in the answer section.\n\n   The resolver MUST record that the `_deleg` label is known to be present for a duration indicated by A RRset's TTL value, adjusted to the resolver's TTL boundaries, for example by caching the RRset.\n   For the period any RRset at the `_deleg` label is cached, the label is \"known to be present\" and the resolver MUST send additional incremental deleg queries as described in TODO.\n\nThis ia bit weird. It introduces a signalling mechanism based on A records. It is not clear why the A record would be there. I think we can either delete this and always use the SOA minimum or use an IDELEG record.",
      "createdAt": "2025-02-28T11:47:25Z",
      "updatedAt": "2025-03-03T14:42:22Z",
      "closedAt": "2025-03-03T14:42:22Z",
      "comments": [
        {
          "author": "moonshiner",
          "authorAssociation": "COLLABORATOR",
          "body": "I read that as referencing the statement about this:\n\n\"The query name for the test query is the `_deleg` label prepended to the apex of zone for which to test presence, with query type A.\"\n\nPerhaps it should be expanded to reference the TTL of the RRset which is returned from the upstream query?  or something about the \"minimum\" of the target zone?",
          "createdAt": "2025-02-28T12:43:01Z",
          "updatedAt": "2025-02-28T12:43:01Z"
        },
        {
          "author": "Philip-NLnetLabs",
          "authorAssociation": "MEMBER",
          "body": "My reasoning is that the probe should be able to use almost any type. 'A' would be fine as an example. But if we later use the TTL of any response then the A query could result in zones containing dummy A records just to send a TTL, which is not ideal.\n\nThe easiest way out seems to be to use the SOA minimum even if a positive answer arrives.",
          "createdAt": "2025-02-28T12:48:28Z",
          "updatedAt": "2025-02-28T12:48:28Z"
        },
        {
          "author": "wtoorop",
          "authorAssociation": "MEMBER",
          "body": "> I think we can either delete this and always use the SOA minimum or use an IDELEG record.\n\nThe disadvantage of getting the TTL from a NODATA response is that the the zone-owner cannot tune how long to cache presence of _deleg at resolvers (at least not independent  from how long NXDOMAIN and NODATA are cached)\n\nThe IDELEG at the _deleg label was reserved for priming queries I believe...",
          "createdAt": "2025-03-02T16:01:19Z",
          "updatedAt": "2025-03-02T16:01:19Z"
        },
        {
          "author": "wtoorop",
          "authorAssociation": "MEMBER",
          "body": "Resolved with the merge of PR #12 ",
          "createdAt": "2025-03-03T14:42:22Z",
          "updatedAt": "2025-03-03T14:42:22Z"
        }
      ]
    },
    {
      "number": 6,
      "id": "I_kwDOMN-KqM6sE-6W",
      "title": "5.2.  Resolver behavior with authoritative name server support",
      "url": "https://github.com/NLnetLabs/incremental-deleg/issues/6",
      "state": "CLOSED",
      "author": "Philip-NLnetLabs",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "I see two issues here:\n1) for an unsigned zone, a deleg supporting authoritative cannot return that an incremental delegation is absent. The section needs additional text for that.\n\n2) A logical authoritative server can be a mix of server with and without support for incremental deleg. So the text\n   If the resolver knows that the authoritative name server supports\n   incremental deleg, _and_ a DNSSEC signed zone is being served, then\n   all referrals MUST contain either an incremental delegation, or\n   NSEC(3) records showing that the delegation does not exist. \n\nis overly restrictive.",
      "createdAt": "2025-02-28T12:07:46Z",
      "updatedAt": "2025-03-03T14:41:59Z",
      "closedAt": "2025-03-03T14:41:58Z",
      "comments": [
        {
          "author": "moonshiner",
          "authorAssociation": "COLLABORATOR",
          "body": "\n1.  stop the first sentence after \"all referral responses\".  For unsigned zones, it sounds similar to the case of Wildcard incremental deleg in the subsection below.\n\n2. A logical authoritative server can be a mix of server with and without support for incremental deleg AND be a mix of serving signed zones and unsigned zones. From reading the wildcard and alias mode sections, they appear to return the DELEG RRSET of the authoritative?",
          "createdAt": "2025-02-28T13:04:58Z",
          "updatedAt": "2025-02-28T13:04:58Z"
        },
        {
          "author": "wtoorop",
          "authorAssociation": "MEMBER",
          "body": "Resolved with the merge of PR #9 ",
          "createdAt": "2025-03-03T14:41:58Z",
          "updatedAt": "2025-03-03T14:41:58Z"
        }
      ]
    },
    {
      "number": 17,
      "id": "I_kwDOMN-KqM6tJ8xA",
      "title": "Havard Eidnes comments",
      "url": "https://github.com/NLnetLabs/incremental-deleg/issues/17",
      "state": "CLOSED",
      "author": "moonshiner",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "\nIn section 4.1 it is written:\n\n   If the triggering query name is the same as the name of the\n   target zone apex, then no further delegation will occur, and\n   resolution will complete. No special behavior or processing is\n   needed.\n\nI don't quite understand.  Why would whether the query is for a zone\napex or not make any difference in recursive resolver behaviour?\nShould not the recursive resolver in both cases get hold of the\npublishing name servers for the zone, and get an answer to the\ntriggering query from one of them?  In both cases, the queried-for\ninformation is authoritative in the delegated zone.\n\nIf I'm right, this could be a potential for simplification, by\ngetting rid of the distinction of whether a query is for a zone apex\nor not.\n\nBesides, how can a newly started recursive resolver ahead of time\nknow the zone structure of the name tree?  In short: it can't.\n\nSection 4.1 also contains:\n\n   The incremental deleg query name is constructed by concatenating\n   the first label below the part that the triggering query name has\n   in common with the target zone, a _deleg label and the name of\n   the target zone. For example if the triggering query is\n   www.customer.example. and the target zone example., then the\n   incremental deleg query name is customer._deleg.example. For\n   another example, if the triggering query is\n   www.faculty.university.example. and the target zone example. then\n   the incremental deleg name is university._deleg.example.\n\nI find this section also to be difficult to grasp.  How can a\nrecursive resolver know where to place the _deleg label, to query\nfor the delegation point(s)?  Does it already need to know the zone\nstructure (which it really can't \"ahead of time\" -- it can only\nlearn that by probing for it).\n",
      "createdAt": "2025-03-08T23:16:16Z",
      "updatedAt": "2025-03-09T12:02:25Z",
      "closedAt": "2025-03-09T12:02:25Z",
      "comments": []
    },
    {
      "number": 21,
      "id": "I_kwDOMN-KqM6uCPye",
      "title": "'Outsourced with an AliasMode IDELEG RR' example is wrong",
      "url": "https://github.com/NLnetLabs/incremental-deleg/issues/21",
      "state": "OPEN",
      "author": "Philip-NLnetLabs",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Figure 5 (Operator zone) is used for both Figure 3 (Outsourced with CNAME) and Figure 4 (Outsourced with an AliasMode IDELEG RR).\n\nFigure 5 is correct for Figure 3. The CNAME in Figure 3 refers to a IDELEG RRset in Figure 5.\n\nHowever in AliasMode, the IDELEG RRset in Figure 4 should refer to an SVCB RRset.",
      "createdAt": "2025-03-14T10:25:49Z",
      "updatedAt": "2025-03-14T10:25:49Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 24,
      "id": "I_kwDOMN-KqM6voT5M",
      "title": "Make it easier to understand Section 4.1 (Recursive Resolver behavior)",
      "url": "https://github.com/NLnetLabs/incremental-deleg/issues/24",
      "state": "OPEN",
      "author": "Philip-NLnetLabs",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "From Michael Richardson:\n\n    >> Could this document in section 4.1, paragraph two, give names to the two\n    >> parallel queries? I don't care what name you use, Abbott and Castello if\nyou l\n    >> ike, but give\n    >> them names?\n\n    > Just checking, you want names for the legacy delegation query and for the\n    > IDELEG query?\n\nYou listed pairs of queries above.\nOne was for NS (Abbot) and one for IDELEG (Castello).\nI'm asking you to name those two queries.  I don't care what.\nThen we can talk about a qname-minimized Abbot query.\n",
      "createdAt": "2025-03-25T13:38:34Z",
      "updatedAt": "2025-03-25T13:38:34Z",
      "closedAt": null,
      "comments": []
    }
  ],
  "pulls": [
    {
      "number": 1,
      "id": "PR_kwDOMN-KqM50T3Mz",
      "title": "PR for review",
      "url": "https://github.com/NLnetLabs/incremental-deleg/pull/1",
      "state": "CLOSED",
      "author": "wtoorop",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-07-03T10:57:03Z",
      "updatedAt": "2024-07-03T11:54:32Z",
      "baseRepository": "NLnetLabs/incremental-deleg",
      "baseRefName": "initial-setup",
      "baseRefOid": "58d89a72a1c93ae25ff5609e945c5b99f4afb985",
      "headRepository": "NLnetLabs/incremental-deleg",
      "headRefName": "main",
      "headRefOid": "9e2ca5cadc24fd5c16c12ab4ebf1ed7b0ef5e3ad",
      "closedAt": "2024-07-03T11:54:32Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    },
    {
      "number": 2,
      "id": "PR_kwDOMN-KqM50USIQ",
      "title": "Content for review",
      "url": "https://github.com/NLnetLabs/incremental-deleg/pull/2",
      "state": "MERGED",
      "author": "wtoorop",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-07-03T11:59:18Z",
      "updatedAt": "2024-07-08T19:11:41Z",
      "baseRepository": "NLnetLabs/incremental-deleg",
      "baseRefName": "main",
      "baseRefOid": "7f397a52234ed6440480b331e2df11ebf9bbd974",
      "headRepository": "NLnetLabs/incremental-deleg",
      "headRefName": "for-review",
      "headRefOid": "f3a76624d2e506e4643844b469c2afbf6da1b9a3",
      "closedAt": "2024-07-08T19:11:41Z",
      "mergedAt": "2024-07-08T19:11:41Z",
      "mergedBy": "wtoorop",
      "mergeCommit": {
        "oid": "8824b4c8092b4318e0ce7adef838257a56fb5a57"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOMN-KqM6Aih2O",
          "commit": {
            "abbreviatedOid": "a03372a"
          },
          "author": "maertsen",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-03T13:57:29Z",
          "updatedAt": "2024-07-03T13:57:30Z",
          "comments": [
            {
              "originalPosition": 528,
              "body": "```suggestion\r\nFor as long as the resolver knows that the authoritative name server support incremental deleg, no additional parallel direct deleg query (as described in {{recursive-resolver-behavior}}) needs to be sent.\r\n```",
              "createdAt": "2024-07-03T13:57:29Z",
              "updatedAt": "2024-07-03T13:57:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMN-KqM6Aii0o",
          "commit": {
            "abbreviatedOid": "a03372a"
          },
          "author": "maertsen",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-03T13:59:01Z",
          "updatedAt": "2024-07-03T13:59:01Z",
          "comments": [
            {
              "originalPosition": 531,
              "body": "s/is/it/\r\nNot sure what comes after \u201cand\u201d",
              "createdAt": "2024-07-03T13:59:01Z",
              "updatedAt": "2024-07-03T13:59:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMN-KqM6AikrI",
          "commit": {
            "abbreviatedOid": "a03372a"
          },
          "author": "maertsen",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-03T14:01:54Z",
          "updatedAt": "2024-07-03T14:01:55Z",
          "comments": [
            {
              "originalPosition": 583,
              "body": "```suggestion\r\nJesse van Zutphen has built a proof of concept implementation supporting delegations as specified in this document for the Unbound recursive resolver as part of his master thesis for the Security and Network Engineering master program of the University of Amsterdam.\r\n```",
              "createdAt": "2024-07-03T14:01:55Z",
              "updatedAt": "2024-07-03T14:01:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMN-KqM6Ai5YN",
          "commit": {
            "abbreviatedOid": "2cf9a12"
          },
          "author": "wtoorop",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-03T14:34:41Z",
          "updatedAt": "2024-07-03T14:34:41Z",
          "comments": [
            {
              "originalPosition": 531,
              "body": "```suggestion\r\nIf a referral is returned that does not contain an incremental delegation nor an indication that it does not exist, then the resolver MUST send an additional incremental deleg query to find the incremental delegation (or denial of its existence).\r\n```",
              "createdAt": "2024-07-03T14:34:41Z",
              "updatedAt": "2024-07-03T14:34:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMN-KqM6Ai73A",
          "commit": {
            "abbreviatedOid": "a03372a"
          },
          "author": "wtoorop",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-03T14:38:46Z",
          "updatedAt": "2024-07-03T14:38:46Z",
          "comments": [
            {
              "originalPosition": 531,
              "body": "Thanks, when I wrote it I was thinking: \"and a _deleg is known to be present in the signed zone\", but this is not necessary, because if it wouldn't have been there, then authoritative name server support would also not have been detected. Anyways, resolved in [08385ad](https://github.com/NLnetLabs/incremental-deleg/pull/2/commits/08385adfba80b3512da4d8132cdff551b17f6502)",
              "createdAt": "2024-07-03T14:38:46Z",
              "updatedAt": "2024-07-03T14:38:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMN-KqM6ArU5C",
          "commit": {
            "abbreviatedOid": "29137fc"
          },
          "author": "Philip-NLnetLabs",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-04T12:40:07Z",
          "updatedAt": "2024-07-04T12:40:08Z",
          "comments": [
            {
              "originalPosition": 134,
              "body": "```suggestion\r\nImplementation in the recursive may be less demanding with respect to (among other things) DNSSEC validation because there is no need to make additional exceptions as to what is authoritative at the parent side of a delegation.\r\n```",
              "createdAt": "2024-07-04T12:40:08Z",
              "updatedAt": "2024-07-04T12:40:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMN-KqM6ArXpR",
          "commit": {
            "abbreviatedOid": "29137fc"
          },
          "author": "Philip-NLnetLabs",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-04T12:45:48Z",
          "updatedAt": "2024-07-04T12:45:49Z",
          "comments": [
            {
              "originalPosition": 227,
              "body": "Maybe a comment is needed that with CNAME you need _dns and with an AliasMode SVCB you don't.",
              "createdAt": "2024-07-04T12:45:48Z",
              "updatedAt": "2024-07-04T12:45:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMN-KqM6ArYtu",
          "commit": {
            "abbreviatedOid": "29137fc"
          },
          "author": "Philip-NLnetLabs",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-04T12:48:00Z",
          "updatedAt": "2024-07-04T12:48:00Z",
          "comments": [
            {
              "originalPosition": 273,
              "body": "```suggestion\r\n                  IN  NSEC   customer7._deleg RRSIG NSEC SVCB\r\n```",
              "createdAt": "2024-07-04T12:48:00Z",
              "updatedAt": "2024-07-04T12:48:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMN-KqM6Ari3v",
          "commit": {
            "abbreviatedOid": "29137fc"
          },
          "author": "Philip-NLnetLabs",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-04T13:08:17Z",
          "updatedAt": "2024-07-04T13:08:17Z",
          "comments": [
            {
              "originalPosition": 390,
              "body": "I think this should be formulated in a more neutral way. There doesn't seem any reason to cache the A RRset. Instead the resolver should record that the _deleg label is known to be present for a duration indicated by the A RRset's TTL value.",
              "createdAt": "2024-07-04T13:08:17Z",
              "updatedAt": "2024-07-04T13:08:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMN-KqM6Arv04",
          "commit": {
            "abbreviatedOid": "29137fc"
          },
          "author": "Philip-NLnetLabs",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-04T13:34:40Z",
          "updatedAt": "2024-07-04T13:34:40Z",
          "comments": [
            {
              "originalPosition": 492,
              "body": "How does this work. Does the target of the CNAME have to have a _dns prefix?",
              "createdAt": "2024-07-04T13:34:40Z",
              "updatedAt": "2024-07-04T13:34:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMN-KqM6ArwfT",
          "commit": {
            "abbreviatedOid": "29137fc"
          },
          "author": "Philip-NLnetLabs",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-04T13:35:57Z",
          "updatedAt": "2024-07-04T13:35:58Z",
          "comments": [
            {
              "originalPosition": 457,
              "body": "Why does this get a SOA record when in the unsigned case there is nothing?",
              "createdAt": "2024-07-04T13:35:58Z",
              "updatedAt": "2024-07-04T13:35:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMN-KqM6AsR5s",
          "commit": {
            "abbreviatedOid": "24649f5"
          },
          "author": "wtoorop",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-04T14:44:07Z",
          "updatedAt": "2024-07-04T14:44:07Z",
          "comments": [
            {
              "originalPosition": 457,
              "body": "I guess we could leave out the SOA. The **signed** NSEC is enough to know the (negative) TTL.",
              "createdAt": "2024-07-04T14:44:07Z",
              "updatedAt": "2024-07-04T14:44:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMN-KqM6AsSQY",
          "commit": {
            "abbreviatedOid": "24649f5"
          },
          "author": "wtoorop",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-04T14:44:58Z",
          "updatedAt": "2024-07-04T14:44:58Z",
          "comments": [
            {
              "originalPosition": 492,
              "body": "Not in this case, because in this case it is referring to another _deleg set.",
              "createdAt": "2024-07-04T14:44:58Z",
              "updatedAt": "2024-07-04T14:44:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMN-KqM6AsTbY",
          "commit": {
            "abbreviatedOid": "24649f5"
          },
          "author": "wtoorop",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-04T14:47:36Z",
          "updatedAt": "2024-07-04T14:47:37Z",
          "comments": [
            {
              "originalPosition": 544,
              "body": "```suggestion\r\n```",
              "createdAt": "2024-07-04T14:47:36Z",
              "updatedAt": "2024-07-04T14:47:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMN-KqM6A1cI4",
          "commit": {
            "abbreviatedOid": "a03372a"
          },
          "author": "jessevz",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-06T07:30:08Z",
          "updatedAt": "2024-07-06T07:30:09Z",
          "comments": [
            {
              "originalPosition": 130,
              "body": "s/form/from/",
              "createdAt": "2024-07-06T07:30:08Z",
              "updatedAt": "2024-07-06T07:30:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMN-KqM6A1cQn",
          "commit": {
            "abbreviatedOid": "a03372a"
          },
          "author": "jessevz",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-06T07:35:03Z",
          "updatedAt": "2024-07-06T07:35:04Z",
          "comments": [
            {
              "originalPosition": 328,
              "body": "/s/send/sent/",
              "createdAt": "2024-07-06T07:35:03Z",
              "updatedAt": "2024-07-06T07:35:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMN-KqM6A1cYq",
          "commit": {
            "abbreviatedOid": "a03372a"
          },
          "author": "jessevz",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-06T07:39:51Z",
          "updatedAt": "2024-07-06T07:39:51Z",
          "comments": [
            {
              "originalPosition": 394,
              "body": "/s/than/then/  and /s/send/sent/    (sentence is in passive voice, thus its sent and not send)",
              "createdAt": "2024-07-06T07:39:51Z",
              "updatedAt": "2024-07-06T07:39:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMN-KqM6A1clA",
          "commit": {
            "abbreviatedOid": "a03372a"
          },
          "author": "jessevz",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-06T07:45:55Z",
          "updatedAt": "2024-07-06T07:45:56Z",
          "comments": [
            {
              "originalPosition": 359,
              "body": "/s/was send/was sent/  /s/will be send/will be sent/   (both future and past tense is sent).",
              "createdAt": "2024-07-06T07:45:55Z",
              "updatedAt": "2024-07-06T07:45:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMN-KqM6A1c4Q",
          "commit": {
            "abbreviatedOid": "a03372a"
          },
          "author": "jessevz",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-06T07:57:39Z",
          "updatedAt": "2024-07-06T07:57:39Z",
          "comments": [
            {
              "originalPosition": 360,
              "body": "s/and the target zone `example.`/and the target zone is `example.`/ and /s/legacy query name was/legacy query name is/ (mixing of past tense and present tense, the triggering query 'is', but the minimised query 'was')    and  s/to be send/to be sent/   ",
              "createdAt": "2024-07-06T07:57:39Z",
              "updatedAt": "2024-07-06T07:57:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMN-KqM6A1dsJ",
          "commit": {
            "abbreviatedOid": "a03372a"
          },
          "author": "jessevz",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-06T08:29:09Z",
          "updatedAt": "2024-07-06T08:29:10Z",
          "comments": [
            {
              "originalPosition": 555,
              "body": "/s/that is aliased/that are aliased/ (RRsets is plural)",
              "createdAt": "2024-07-06T08:29:10Z",
              "updatedAt": "2024-07-06T08:29:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMN-KqM6A1d0H",
          "commit": {
            "abbreviatedOid": "a03372a"
          },
          "author": "jessevz",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-06T08:33:52Z",
          "updatedAt": "2024-07-06T08:33:52Z",
          "comments": [
            {
              "originalPosition": 116,
              "body": "/s/include/includes/ and  /s/serversfor/servers for/  ",
              "createdAt": "2024-07-06T08:33:52Z",
              "updatedAt": "2024-07-06T08:33:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMN-KqM6A1eQ8",
          "commit": {
            "abbreviatedOid": "a03372a"
          },
          "author": "jessevz",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-06T08:49:43Z",
          "updatedAt": "2024-07-06T08:49:43Z",
          "comments": [
            {
              "originalPosition": 113,
              "body": "/s/counter measure/countermeasure",
              "createdAt": "2024-07-06T08:49:43Z",
              "updatedAt": "2024-07-06T08:49:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMN-KqM6A1eTy",
          "commit": {
            "abbreviatedOid": "a03372a"
          },
          "author": "jessevz",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-06T08:51:33Z",
          "updatedAt": "2024-07-06T08:51:33Z",
          "comments": [
            {
              "originalPosition": 118,
              "body": "/s/then the delegation/it/ (I feel like the sentence flows beter like this)",
              "createdAt": "2024-07-06T08:51:33Z",
              "updatedAt": "2024-07-06T08:51:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMN-KqM6A1eqk",
          "commit": {
            "abbreviatedOid": "a03372a"
          },
          "author": "jessevz",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-06T09:05:43Z",
          "updatedAt": "2024-07-06T09:05:43Z",
          "comments": [
            {
              "originalPosition": 349,
              "body": "/s/an/a/   and   /s/responses/response/",
              "createdAt": "2024-07-06T09:05:43Z",
              "updatedAt": "2024-07-06T09:05:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMN-KqM6A1et6",
          "commit": {
            "abbreviatedOid": "a03372a"
          },
          "author": "jessevz",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-06T09:07:52Z",
          "updatedAt": "2024-07-06T09:07:53Z",
          "comments": [
            {
              "originalPosition": 361,
              "body": "/s/will as described above/will be done as described above/",
              "createdAt": "2024-07-06T09:07:52Z",
              "updatedAt": "2024-07-06T09:07:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMN-KqM6A1kFo",
          "commit": {
            "abbreviatedOid": "6090528"
          },
          "author": "gthess",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-06T12:26:05Z",
          "updatedAt": "2024-07-06T12:47:00Z",
          "comments": [
            {
              "originalPosition": 457,
              "body": "Why query type A? The rest of the child._deleg.parent queries are with type SVCB.",
              "createdAt": "2024-07-06T12:26:06Z",
              "updatedAt": "2024-07-06T12:47:00Z"
            },
            {
              "originalPosition": 604,
              "body": "```suggestion\r\nIf it is known that an authoritative name server supports incremental deleg, then no direct queries for the incremental delegation need to be send in parallel to the legacy delegation query.\r\n```",
              "createdAt": "2024-07-06T12:31:13Z",
              "updatedAt": "2024-07-06T12:47:00Z"
            },
            {
              "originalPosition": 605,
              "body": "How? The _deleg.parent query will/should have already been fired and that cached record is the \"registered support\". I don't like the wording of registering support because it reads as state needs to be kept per zone. Although that is true, the state is just the cached _deleg.parent answer. And maybe a record type is needed there to get a proper TTL back and not rely on the SOA values.",
              "createdAt": "2024-07-06T12:34:21Z",
              "updatedAt": "2024-07-06T12:51:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMN-KqM6A1p52",
          "commit": {
            "abbreviatedOid": "a03372a"
          },
          "author": "jessevz",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-06T16:05:54Z",
          "updatedAt": "2024-07-06T16:05:54Z",
          "comments": [
            {
              "originalPosition": 369,
              "body": "Here it says that a _deleg presence query should be be send when the presence of _deleg is unknown, but in table 1 it says that when there is deleg support in the nameserver no additional query needs to be send even when the _deleg presence is unknown. so i think this statement needs an extra clause that states that this is not needed when it is known that there is nameserver support.",
              "createdAt": "2024-07-06T16:05:54Z",
              "updatedAt": "2024-07-06T16:05:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMN-KqM6A2pKI",
          "commit": {
            "abbreviatedOid": "a03372a"
          },
          "author": "jessevz",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-07T08:09:48Z",
          "updatedAt": "2024-07-07T08:09:48Z",
          "comments": [
            {
              "originalPosition": 130,
              "body": "Also I feel like comparable implies that it can differ, but im pretty sure it is exactly the same amount of round trips ",
              "createdAt": "2024-07-07T08:09:48Z",
              "updatedAt": "2024-07-07T08:09:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMN-KqM6A6pEm",
          "commit": {
            "abbreviatedOid": "6090528"
          },
          "author": "wtoorop",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "Some suggestions to address the comments",
          "createdAt": "2024-07-08T10:04:32Z",
          "updatedAt": "2024-07-08T10:41:00Z",
          "comments": [
            {
              "originalPosition": 198,
              "body": "```suggestion\r\nDNSSEC protection of delegation information prevents that, and is the only countermeasure that also works against on-path attackers.\r\n```",
              "createdAt": "2024-07-08T10:04:33Z",
              "updatedAt": "2024-07-08T10:41:00Z"
            },
            {
              "originalPosition": 201,
              "body": "```suggestion\r\nDirect delegation information (provided by SVCB RRs in ServiceMode) includes the hostnames of the authoritative name servers for the delegation as well as IP addresses for those hostnames.\r\n```",
              "createdAt": "2024-07-08T10:05:30Z",
              "updatedAt": "2024-07-08T10:41:00Z"
            },
            {
              "originalPosition": 203,
              "body": "```suggestion\r\nWhen the delegation is outsourced, then it's protected when the zones providing the aliasing resource records *and* the zones serving the targets of the aliases are all DNSSEC signed.\r\n```",
              "createdAt": "2024-07-08T10:06:22Z",
              "updatedAt": "2024-07-08T10:41:00Z"
            },
            {
              "originalPosition": 215,
              "body": "```suggestion\r\nThe number of round trips from the recursive resolver to the authoritative name server is comparable to what is needed for DNS Query Name Minimisation {{!RFC9156}}.\r\n```",
              "createdAt": "2024-07-08T10:08:49Z",
              "updatedAt": "2024-07-08T10:41:00Z"
            },
            {
              "originalPosition": 312,
              "body": "```suggestion\r\nIt is RECOMMENDED to use a CNAME over an SVCB RRset with a single SVCB RR in AliasMode ({{Section 10.2 of !RFC9460}}).\r\nNote that an SVCB RRset refers with TargetName to an DNS service, which will be looked up using Port Prefix Naming {{Section 3 of RFC9461}}, but that CNAME refers to the domain name of the target SVCB RRset (or CNAME) which may have an `_dns` prefix.\r\n```",
              "createdAt": "2024-07-08T10:16:03Z",
              "updatedAt": "2024-07-08T10:41:00Z"
            },
            {
              "originalPosition": 415,
              "body": "```suggestion\r\nIn this case two parallel queries MUST be sent.\r\n```",
              "createdAt": "2024-07-08T10:26:22Z",
              "updatedAt": "2024-07-08T10:41:00Z"
            },
            {
              "originalPosition": 436,
              "body": "```suggestion\r\n3. The incremental deleg query name does exist, but resulted in a NOERROR no answer response (also known as a NODATA response).\r\n```",
              "createdAt": "2024-07-08T10:27:11Z",
              "updatedAt": "2024-07-08T10:41:00Z"
            },
            {
              "originalPosition": 446,
              "body": "```suggestion\r\n   If the legacy query was sent minimised and needs a followup query, then parallel to that followup query a new incremental deleg query will be sent, adding a single label to the previous incremental deleg query name.\r\n```",
              "createdAt": "2024-07-08T10:28:05Z",
              "updatedAt": "2024-07-08T10:41:00Z"
            },
            {
              "originalPosition": 447,
              "body": "```suggestion\r\n   For example if the triggering query is `www.university.ac.example.` and the target zone is `example.` and the minimised legacy query name is `ac.example.` (which also resulted in a NOERROR no answer response), then the incremental deleg query to be sent along in parallel with the followup legacy query will become `university.ac.example.`\r\n```",
              "createdAt": "2024-07-08T10:29:18Z",
              "updatedAt": "2024-07-08T10:41:00Z"
            },
            {
              "originalPosition": 448,
              "body": "```suggestion\r\n   Processing of the responses of those two new queries will be done as described above.\r\n```",
              "createdAt": "2024-07-08T10:29:41Z",
              "updatedAt": "2024-07-08T10:41:00Z"
            },
            {
              "originalPosition": 456,
              "body": "```suggestion\r\nWhen the presence of a `_deleg` label is \"unknown\", a `_deleg` presence test query SHOULD be sent in parallel to the next query for the zone (though not when the target name server is known to support incremental deleg, which will be discussed in {{authoritative-name-server-support}}).\r\n```",
              "createdAt": "2024-07-08T10:31:34Z",
              "updatedAt": "2024-07-08T10:41:00Z"
            },
            {
              "originalPosition": 457,
              "body": "Because that also works with qname minimisation... But there is a use case for it to be SVCB (when the target zone needs priming).",
              "createdAt": "2024-07-08T10:33:12Z",
              "updatedAt": "2024-07-08T10:41:00Z"
            },
            {
              "originalPosition": 475,
              "body": "```suggestion\r\n   The resolver MUST record that the `_deleg` label is known to be present for a duration indicated by A RRset's TTL value, adjusted to the resolver's TTL boundaries, for example by caching the RRset.\r\n```",
              "createdAt": "2024-07-08T10:38:50Z",
              "updatedAt": "2024-07-08T10:41:00Z"
            },
            {
              "originalPosition": 605,
              "body": "No, besides zone state, there is also per authoritative state, to know whether it has support for `_deleg` or not.",
              "createdAt": "2024-07-08T10:40:27Z",
              "updatedAt": "2024-07-08T10:41:01Z"
            }
          ]
        }
      ]
    },
    {
      "number": 4,
      "id": "PR_kwDOMN-KqM6H7BYw",
      "title": "minor edits",
      "url": "https://github.com/NLnetLabs/incremental-deleg/pull/4",
      "state": "MERGED",
      "author": "moonshiner",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Minor editorial updates while reading.  \r\n\r\nTODO text to come. ",
      "createdAt": "2025-01-15T22:58:54Z",
      "updatedAt": "2025-01-16T12:21:36Z",
      "baseRepository": "NLnetLabs/incremental-deleg",
      "baseRefName": "main",
      "baseRefOid": "5c2e6fef0fe0fc83b1ad673d2bbe664300c68028",
      "headRepository": "moonshiner/incremental-deleg",
      "headRefName": "main",
      "headRefOid": "d5b8b3beb57565586acb7e0dd41ed666c353cb9e",
      "closedAt": "2025-01-16T12:21:36Z",
      "mergedAt": "2025-01-16T12:21:36Z",
      "mergedBy": "moonshiner",
      "mergeCommit": {
        "oid": "1b6aaa344d12d2484b229513bf8820af80054d58"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 7,
      "id": "PR_kwDOMN-KqM6M7tiZ",
      "title": "Renamed DELEG to IDELEG.",
      "url": "https://github.com/NLnetLabs/incremental-deleg/pull/7",
      "state": "MERGED",
      "author": "Philip-NLnetLabs",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-02-28T12:31:21Z",
      "updatedAt": "2025-02-28T12:51:20Z",
      "baseRepository": "NLnetLabs/incremental-deleg",
      "baseRefName": "main",
      "baseRefOid": "1b6aaa344d12d2484b229513bf8820af80054d58",
      "headRepository": "NLnetLabs/incremental-deleg",
      "headRefName": "ideleg",
      "headRefOid": "00d08cbf9d27c57f55a3b164282a84e2470d7f9c",
      "closedAt": "2025-02-28T12:51:14Z",
      "mergedAt": "2025-02-28T12:51:14Z",
      "mergedBy": "Philip-NLnetLabs",
      "mergeCommit": {
        "oid": "bbb7e85ba2a2a1547d400c46fea5ed5cc65df1ea"
      },
      "comments": [
        {
          "author": "moonshiner",
          "authorAssociation": "COLLABORATOR",
          "body": "Straightforward as we discussed.  OK ",
          "createdAt": "2025-02-28T12:46:29Z",
          "updatedAt": "2025-02-28T12:46:29Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOMN-KqM6d_fqX",
          "commit": {
            "abbreviatedOid": "00d08cb"
          },
          "author": "wtoorop",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-02-28T12:50:55Z",
          "updatedAt": "2025-02-28T12:50:55Z",
          "comments": []
        }
      ]
    },
    {
      "number": 8,
      "id": "PR_kwDOMN-KqM6M8fLo",
      "title": "Add requirements section.",
      "url": "https://github.com/NLnetLabs/incremental-deleg/pull/8",
      "state": "MERGED",
      "author": "Philip-NLnetLabs",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-02-28T14:12:41Z",
      "updatedAt": "2025-02-28T16:22:54Z",
      "baseRepository": "NLnetLabs/incremental-deleg",
      "baseRefName": "main",
      "baseRefOid": "bbb7e85ba2a2a1547d400c46fea5ed5cc65df1ea",
      "headRepository": "NLnetLabs/incremental-deleg",
      "headRefName": "requirements",
      "headRefOid": "bef394bd7d1d9ee7c0fea92f7383931c6b5efd9e",
      "closedAt": "2025-02-28T16:22:46Z",
      "mergedAt": "2025-02-28T16:22:46Z",
      "mergedBy": "Philip-NLnetLabs",
      "mergeCommit": {
        "oid": "600d8cf03f5a1988d2479f38d72ae82da33d2eb4"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOMN-KqM6eBUbZ",
          "commit": {
            "abbreviatedOid": "b6c826d"
          },
          "author": "wtoorop",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "Looks good. Some spelling fixes and some suggestions.",
          "createdAt": "2025-02-28T15:51:47Z",
          "updatedAt": "2025-02-28T16:03:20Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "```suggestion\r\nThis section will discuss how incremental deleg meets the requirements for a new delegation mechanism as described in {{?I-D.ietf-deleg-requirements-02}}\r\n```",
              "createdAt": "2025-02-28T15:51:47Z",
              "updatedAt": "2025-02-28T16:03:20Z"
            },
            {
              "originalPosition": 31,
              "body": "```suggestion\r\n  Incremental deleg introduces a new RR type.\r\n```",
              "createdAt": "2025-02-28T15:53:05Z",
              "updatedAt": "2025-02-28T16:03:20Z"
            },
            {
              "originalPosition": 34,
              "body": "```suggestion\r\n  Though unknown type notation {{!RFC3597}} can be used in some cases if no support for the new RR type is present.\r\n```\r\nThe renderer already adds square brackets",
              "createdAt": "2025-02-28T15:54:16Z",
              "updatedAt": "2025-02-28T16:03:20Z"
            },
            {
              "originalPosition": 35,
              "body": "```suggestion\r\n  Existing authoritatives can serve incremental deleg zones (though less efficiently), existing signers can sign incremental deleg zones, existing diagnostic tools can query incremental deleg zones.\r\n```\r\nRemove the \"-aware\" because it may make one feel that there is some \"awareness\" needed in the implementation.",
              "createdAt": "2025-02-28T15:57:12Z",
              "updatedAt": "2025-02-28T16:03:20Z"
            },
            {
              "originalPosition": 51,
              "body": "```suggestion\r\n  Incremental deleg zones can be added without upgrading authoritatives.\r\n  Incremental deleg zones still work with old resolvers and validators.\r\n```",
              "createdAt": "2025-02-28T15:59:16Z",
              "updatedAt": "2025-02-28T16:03:20Z"
            },
            {
              "originalPosition": 68,
              "body": "```suggestion\r\n  The exception is a replacement for the DS records, which is described in {{?I-D.homburg-deleg-incremental-dnssec}}.\r\n```",
              "createdAt": "2025-02-28T16:00:18Z",
              "updatedAt": "2025-02-28T16:03:20Z"
            }
          ]
        }
      ]
    },
    {
      "number": 9,
      "id": "PR_kwDOMN-KqM6NEsay",
      "title": "absent incremental delegation in unsigned zones with auth support, and ...",
      "url": "https://github.com/NLnetLabs/incremental-deleg/pull/9",
      "state": "MERGED",
      "author": "wtoorop",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "... an auth SHOULD send incremental delegation (or absence) in the authority section (instead of MUST), because there may be auths with support and auths without support behind a load-balancer for example.\r\n\r\nThis addresses issue #6",
      "createdAt": "2025-03-02T19:48:59Z",
      "updatedAt": "2025-03-03T14:28:07Z",
      "baseRepository": "NLnetLabs/incremental-deleg",
      "baseRefName": "main",
      "baseRefOid": "cd9e922968cb50d322745b74162442257c2bcb93",
      "headRepository": "NLnetLabs/incremental-deleg",
      "headRefName": "behavior-with-auth-support",
      "headRefOid": "cb06998b5785dd2533294eaa0978f527c4e87bc3",
      "closedAt": "2025-03-03T14:28:07Z",
      "mergedAt": "2025-03-03T14:28:07Z",
      "mergedBy": "wtoorop",
      "mergeCommit": {
        "oid": "7ab6a96ae3eeddc2000688e2b03ff52a352cb7c3"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOMN-KqM6eHo7u",
          "commit": {
            "abbreviatedOid": "71ad6f3"
          },
          "author": "wtoorop",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-03-02T19:51:37Z",
          "updatedAt": "2025-03-02T19:51:38Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "```suggestion\r\nFor an unsigned zone, an incremental deleg supporting authoritative cannot return that an incremental delegation is absent (because of lack of an authenticated denial of existence), however with support from the served zone (the zone has an `*._deleg IN IDELEG 0 .` RR provisioned), the authoritative name server can signal support also for unsigned zones (see {{extra-optimized (Extra optimized implementation)}}).\r\n```",
              "createdAt": "2025-03-02T19:51:37Z",
              "updatedAt": "2025-03-02T19:51:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMN-KqM6eHpEo",
          "commit": {
            "abbreviatedOid": "f105662"
          },
          "author": "moonshiner",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "These look good - this may read better but  it's not a big deal\r\n\r\n(the zone has the Resource Record provisioned `*._deleg IN IDELEG 0 .`)",
          "createdAt": "2025-03-02T19:54:48Z",
          "updatedAt": "2025-03-02T19:54:48Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOMN-KqM6eHq9B",
          "commit": {
            "abbreviatedOid": "f105662"
          },
          "author": "wtoorop",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "The suggestion from Tim",
          "createdAt": "2025-03-02T20:36:58Z",
          "updatedAt": "2025-03-02T20:38:08Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "```suggestion\r\nFor an unsigned zone, an incremental deleg supporting authoritative cannot return that an incremental delegation is absent (because of lack of an authenticated denial of existence), however with support from the served zone (the zone has the Resource Record provisioned `*._deleg IN IDELEG 0 .`), the authoritative name server can signal support also for unsigned zones (see {{extra-optimized (Extra optimized implementation)}}).\r\n```",
              "createdAt": "2025-03-02T20:36:58Z",
              "updatedAt": "2025-03-02T20:38:08Z"
            },
            {
              "originalPosition": 15,
              "body": "```suggestion\r\nWith unsigned zones, support is apparent only from referral responses for which an incremental delegation exists, unless the zone has the Resource Record `*._deleg IN IDELEG 0 .` provisioned (see {{extra-optimized (Extra optimized implementation)}}).\r\n```",
              "createdAt": "2025-03-02T20:37:38Z",
              "updatedAt": "2025-03-02T20:38:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMN-KqM6eMTIX",
          "commit": {
            "abbreviatedOid": "6c5f1b8"
          },
          "author": "Philip-NLnetLabs",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-03-03T12:40:19Z",
          "updatedAt": "2025-03-03T12:40:19Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "Maybe we should add:\r\n\r\nIf a resolver has registered that an authoritative name server supports incremental deleg and resolver receives a delegation without (denial of) an incremental delegation then resolver MUST issue a separate incremental deleg query and MAY register that authoritative server does not support incremental deleg.",
              "createdAt": "2025-03-03T12:40:19Z",
              "updatedAt": "2025-03-03T12:40:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMN-KqM6eMsRm",
          "commit": {
            "abbreviatedOid": "6c5f1b8"
          },
          "author": "wtoorop",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-03-03T13:26:42Z",
          "updatedAt": "2025-03-03T13:26:42Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "Agree, I'll add it",
              "createdAt": "2025-03-03T13:26:42Z",
              "updatedAt": "2025-03-03T13:26:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMN-KqM6eMvf1",
          "commit": {
            "abbreviatedOid": "6c5f1b8"
          },
          "author": "wtoorop",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-03-03T13:32:27Z",
          "updatedAt": "2025-03-03T13:32:27Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "Wait a minute. It already says this in the last two paragraphs of this subsection. Quoting:\r\n> If the resolver knows that the authoritative name server supports incremental deleg, *and* a DNSSEC signed zone is being served, then all referrals SHOULD contain either an incremental delegation, or NSEC(3) records showing that the delegation does not exist.\r\n> If a referral is returned that does not contain an incremental delegation nor an indication that it does not exist, then the resolver MUST send an additional incremental deleg query to find the incremental delegation (or denial of its existence).",
              "createdAt": "2025-03-03T13:32:27Z",
              "updatedAt": "2025-03-03T13:33:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMN-KqM6eMx6p",
          "commit": {
            "abbreviatedOid": "6c5f1b8"
          },
          "author": "wtoorop",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-03-03T13:36:40Z",
          "updatedAt": "2025-03-03T13:36:40Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "@Philip-NLnetLabs can you confirm your suggestion was already in the text?",
              "createdAt": "2025-03-03T13:36:40Z",
              "updatedAt": "2025-03-03T13:36:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMN-KqM6eM9M2",
          "commit": {
            "abbreviatedOid": "6c5f1b8"
          },
          "author": "Philip-NLnetLabs",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-03-03T13:55:32Z",
          "updatedAt": "2025-03-03T13:55:32Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "The part that I wanted to add was 'and MAY register that authoritative server does not support incremental deleg.' I assumed, but did not verify that the other part about sending a separate query was already there. But felt that a bit of redundancy would be warranted in this case.",
              "createdAt": "2025-03-03T13:55:32Z",
              "updatedAt": "2025-03-03T13:55:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMN-KqM6eNGMK",
          "commit": {
            "abbreviatedOid": "6c5f1b8"
          },
          "author": "wtoorop",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-03-03T14:09:00Z",
          "updatedAt": "2025-03-03T14:09:00Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "Well the redundancy is very close to each other. I'll see if I can extend already existing paragraph with 'and MAY register that authoritative server does not support incremental deleg.'",
              "createdAt": "2025-03-03T14:09:00Z",
              "updatedAt": "2025-03-03T14:09:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMN-KqM6eNG8B",
          "commit": {
            "abbreviatedOid": "6c5f1b8"
          },
          "author": "Philip-NLnetLabs",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-03-03T14:10:09Z",
          "updatedAt": "2025-03-03T14:10:09Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "That is fine with me",
              "createdAt": "2025-03-03T14:10:09Z",
              "updatedAt": "2025-03-03T14:10:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMN-KqM6eNQ0i",
          "commit": {
            "abbreviatedOid": "cb06998"
          },
          "author": "wtoorop",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-03-03T14:24:04Z",
          "updatedAt": "2025-03-03T14:24:04Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "I have added this text to mention deregistration of auth support by the resolver. Can you re-review @Philip-NLnetLabs and approve if you do approve?",
              "createdAt": "2025-03-03T14:24:04Z",
              "updatedAt": "2025-03-03T14:24:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMN-KqM6eNR7H",
          "commit": {
            "abbreviatedOid": "cb06998"
          },
          "author": "Philip-NLnetLabs",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-03-03T14:25:38Z",
          "updatedAt": "2025-03-03T14:25:38Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "Yes, that looks good.",
              "createdAt": "2025-03-03T14:25:38Z",
              "updatedAt": "2025-03-03T14:25:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMN-KqM6eNSdI",
          "commit": {
            "abbreviatedOid": "cb06998"
          },
          "author": "Philip-NLnetLabs",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-03-03T14:26:25Z",
          "updatedAt": "2025-03-03T14:26:25Z",
          "comments": []
        }
      ]
    },
    {
      "number": 10,
      "id": "PR_kwDOMN-KqM6NEwhh",
      "title": "Extend the implementation section with current status",
      "url": "https://github.com/NLnetLabs/incremental-deleg/pull/10",
      "state": "MERGED",
      "author": "wtoorop",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-03-02T20:33:34Z",
      "updatedAt": "2025-03-03T13:19:59Z",
      "baseRepository": "NLnetLabs/incremental-deleg",
      "baseRefName": "main",
      "baseRefOid": "600d8cf03f5a1988d2479f38d72ae82da33d2eb4",
      "headRepository": "NLnetLabs/incremental-deleg",
      "headRefName": "implementations",
      "headRefOid": "95535d4f811b098b2bc277de568c614ba5ee68db",
      "closedAt": "2025-03-03T13:19:59Z",
      "mergedAt": "2025-03-03T13:19:59Z",
      "mergedBy": "wtoorop",
      "mergeCommit": {
        "oid": "163a0448785046aa57a898b584ef223fcc8a0b40"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOMN-KqM6eHzI1",
          "commit": {
            "abbreviatedOid": "95535d4"
          },
          "author": "moonshiner",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Good",
          "createdAt": "2025-03-02T22:58:24Z",
          "updatedAt": "2025-03-02T22:58:24Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOMN-KqM6eMZRb",
          "commit": {
            "abbreviatedOid": "95535d4"
          },
          "author": "Philip-NLnetLabs",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-03-03T12:51:26Z",
          "updatedAt": "2025-03-03T12:51:26Z",
          "comments": []
        }
      ]
    },
    {
      "number": 11,
      "id": "PR_kwDOMN-KqM6NE6cR",
      "title": "Explain how mixed ServiceMode and AliasMode IDELEG RRsets work",
      "url": "https://github.com/NLnetLabs/incremental-deleg/pull/11",
      "state": "MERGED",
      "author": "wtoorop",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-03-02T22:17:44Z",
      "updatedAt": "2025-03-03T13:20:22Z",
      "baseRepository": "NLnetLabs/incremental-deleg",
      "baseRefName": "main",
      "baseRefOid": "5c7a11123369695cc5487d6fe11c271b53162027",
      "headRepository": "NLnetLabs/incremental-deleg",
      "headRefName": "mixed-service-and-aliase-mode",
      "headRefOid": "e302c9b613e65e8df40217c36ff2a7936a8f80b4",
      "closedAt": "2025-03-03T13:20:21Z",
      "mergedAt": "2025-03-03T13:20:21Z",
      "mergedBy": "wtoorop",
      "mergeCommit": {
        "oid": "cd9e922968cb50d322745b74162442257c2bcb93"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOMN-KqM6eH0AX",
          "commit": {
            "abbreviatedOid": "e302c9b"
          },
          "author": "moonshiner",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Yes",
          "createdAt": "2025-03-02T23:12:17Z",
          "updatedAt": "2025-03-02T23:12:17Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOMN-KqM6eMZ2j",
          "commit": {
            "abbreviatedOid": "e302c9b"
          },
          "author": "Philip-NLnetLabs",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-03-03T12:52:31Z",
          "updatedAt": "2025-03-03T12:52:31Z",
          "comments": []
        }
      ]
    },
    {
      "number": 12,
      "id": "PR_kwDOMN-KqM6NE73e",
      "title": "IDELEG as qtype for _deleg.<apex> presence query",
      "url": "https://github.com/NLnetLabs/incremental-deleg/pull/12",
      "state": "MERGED",
      "author": "wtoorop",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "This fixes issue #5 ",
      "createdAt": "2025-03-02T22:33:46Z",
      "updatedAt": "2025-03-03T14:26:09Z",
      "baseRepository": "NLnetLabs/incremental-deleg",
      "baseRefName": "main",
      "baseRefOid": "cd9e922968cb50d322745b74162442257c2bcb93",
      "headRepository": "NLnetLabs/incremental-deleg",
      "headRefName": "_deleg-qtype",
      "headRefOid": "97d93cf973b32c282e9858b67eb433a11dec7dc2",
      "closedAt": "2025-03-03T14:26:08Z",
      "mergedAt": "2025-03-03T14:26:08Z",
      "mergedBy": "wtoorop",
      "mergeCommit": {
        "oid": "5c0ac8a7e4959b102cb51895c64cd47676b8b097"
      },
      "comments": [
        {
          "author": "Philip-NLnetLabs",
          "authorAssociation": "MEMBER",
          "body": "In the light of the security section, what if we probe with an NS qtype? That should detect any accidental delegations. But might be considered a hack. Is the risk of somebody registering _deleg a serious risk? There is also ACME with dns01 verification.",
          "createdAt": "2025-03-03T10:14:46Z",
          "updatedAt": "2025-03-03T10:14:46Z"
        },
        {
          "author": "wtoorop",
          "authorAssociation": "MEMBER",
          "body": "> In the light of the security section, what if we probe with an NS qtype? That should detect any accidental delegations. But might be considered a hack.\r\n\r\nI like the idea, but then the TTL to cache \"known to exist\" is again the same as those of NODATA and NXDOMAINs and cannot be controlled separately by the zone owner.\r\n\r\n>  Is the risk of somebody registering _deleg a serious risk? There is also ACME with dns01 verification.\r\n\r\nCurrently there is nothing in the Security Section about bad actors trying to register _deleg, so I propose to leave it like that.\r\n\r\nThe impact with _acme-challenge is substantially lower, because _acme-challenge is the left-most label. So you always hijack only a single name instead of all delegations.",
          "createdAt": "2025-03-03T12:24:55Z",
          "updatedAt": "2025-03-03T12:38:00Z"
        },
        {
          "author": "Philip-NLnetLabs",
          "authorAssociation": "MEMBER",
          "body": "What is the downside of the SOA minimum? Is your worry that it might be too low or too high?",
          "createdAt": "2025-03-03T12:34:09Z",
          "updatedAt": "2025-03-03T12:34:09Z"
        },
        {
          "author": "wtoorop",
          "authorAssociation": "MEMBER",
          "body": "> What is the downside of the SOA minimum? Is your worry that it might be too low or too high?\r\n\r\nToo low yes. If you do incremental deleg and are not planning to remove it in the future, then you want resolvers to have this cached as long as possible, right?",
          "createdAt": "2025-03-03T12:37:29Z",
          "updatedAt": "2025-03-03T12:37:29Z"
        },
        {
          "author": "Philip-NLnetLabs",
          "authorAssociation": "MEMBER",
          "body": "If you have _deleg and the authoritative does not support incremental deleg then you already get a separate incremental deleg query for each name lookup. I don't see how an extra _deleg at the rate of the SOA minimum would make a big difference.",
          "createdAt": "2025-03-03T12:45:32Z",
          "updatedAt": "2025-03-03T12:45:32Z"
        },
        {
          "author": "wtoorop",
          "authorAssociation": "MEMBER",
          "body": "> If you have _deleg and the authoritative does not support incremental deleg then you already get a separate incremental deleg query for each name lookup. I don't see how an extra _deleg at the rate of the SOA minimum would make a big difference.\r\n\r\nOkay, I agree. It is quite a bit of text to rewrite, but I'll give it a go",
          "createdAt": "2025-03-03T13:39:00Z",
          "updatedAt": "2025-03-03T13:39:00Z"
        },
        {
          "author": "wtoorop",
          "authorAssociation": "MEMBER",
          "body": "> If you have _deleg and the authoritative does not support incremental deleg then you already get a separate incremental deleg query for each name lookup. I don't see how an extra _deleg at the rate of the SOA minimum would make a big difference.\r\n\r\nI have rewritten it to use qtype NS. Can you review @Philip-NLnetLabs ",
          "createdAt": "2025-03-03T14:06:40Z",
          "updatedAt": "2025-03-03T14:06:40Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOMN-KqM6eH0LO",
          "commit": {
            "abbreviatedOid": "a6c2d00"
          },
          "author": "moonshiner",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "OK",
          "createdAt": "2025-03-02T23:15:13Z",
          "updatedAt": "2025-03-02T23:15:13Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOMN-KqM6eNDg6",
          "commit": {
            "abbreviatedOid": "3e89ad8"
          },
          "author": "wtoorop",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-03-03T14:04:43Z",
          "updatedAt": "2025-03-03T14:04:44Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "```suggestion\r\n   The resolver MUST record that the zone does not have valid incremental delegations deployed for the duration indicated by the NS RRset's TTL value, adjusted to the resolver's TTL boundaries.\r\n```",
              "createdAt": "2025-03-03T14:04:43Z",
              "updatedAt": "2025-03-03T14:04:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMN-KqM6eNDxH",
          "commit": {
            "abbreviatedOid": "3e89ad8"
          },
          "author": "Philip-NLnetLabs",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-03-03T14:05:08Z",
          "updatedAt": "2025-03-03T14:05:08Z",
          "comments": []
        }
      ]
    },
    {
      "number": 13,
      "id": "PR_kwDOMN-KqM6NFGp8",
      "title": "Comparison with legacy delegations",
      "url": "https://github.com/NLnetLabs/incremental-deleg/pull/13",
      "state": "MERGED",
      "author": "wtoorop",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-03-03T00:22:52Z",
      "updatedAt": "2025-03-03T12:22:54Z",
      "baseRepository": "NLnetLabs/incremental-deleg",
      "baseRefName": "main",
      "baseRefOid": "c7e42f64d219b2d38c3b71a3c3300f35853a8f47",
      "headRepository": "NLnetLabs/incremental-deleg",
      "headRefName": "comparisons",
      "headRefOid": "49f32e75e8529165d07965fb8b3665858f621163",
      "closedAt": "2025-03-03T12:22:54Z",
      "mergedAt": "2025-03-03T12:22:54Z",
      "mergedBy": "wtoorop",
      "mergeCommit": {
        "oid": "e2cedb835dd6065d1255fb5cda488a52f19c664c"
      },
      "comments": [
        {
          "author": "Philip-NLnetLabs",
          "authorAssociation": "MEMBER",
          "body": "Looks good to me.",
          "createdAt": "2025-03-03T12:20:22Z",
          "updatedAt": "2025-03-03T12:20:22Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOMN-KqM6eJceL",
          "commit": {
            "abbreviatedOid": "6ff2bdc"
          },
          "author": "moonshiner",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "I have some suggested edits but feel it is better to approve and then suggest\r\n\r\nLike 760:\r\ns/An authoritative could/An authoritative name server could/ ",
          "createdAt": "2025-03-03T07:35:46Z",
          "updatedAt": "2025-03-03T07:35:46Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOMN-KqM6eK9jW",
          "commit": {
            "abbreviatedOid": "6ff2bdc"
          },
          "author": "Philip-NLnetLabs",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-03-03T10:16:45Z",
          "updatedAt": "2025-03-03T10:16:46Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "I'm a bit confused by this. How is the delegated zone 'in charge' (I assume in the sense of client-side NS records) of IDELEG records?",
              "createdAt": "2025-03-03T10:16:45Z",
              "updatedAt": "2025-03-03T10:16:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMN-KqM6eLpkF",
          "commit": {
            "abbreviatedOid": "6ff2bdc"
          },
          "author": "wtoorop",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-03-03T11:30:15Z",
          "updatedAt": "2025-03-03T11:30:16Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "Sorry I was thinking about usage of IDELEG which we haven't discussed yet, namely, have an AliasMode IDELEL in the parent with as target name a name below the delegated zone, and then ipv4hints and ipv6hints as glue.\r\nBut I agree this is introducing all kinds of confusion, so perhaps leave that out for now and bring it up and create text for it later (if anyone wants it in the first place) .",
              "createdAt": "2025-03-03T11:30:16Z",
              "updatedAt": "2025-03-03T11:30:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMN-KqM6eLqxK",
          "commit": {
            "abbreviatedOid": "6ff2bdc"
          },
          "author": "wtoorop",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-03-03T11:32:41Z",
          "updatedAt": "2025-03-03T11:32:41Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "```suggestion\r\n```",
              "createdAt": "2025-03-03T11:32:41Z",
              "updatedAt": "2025-03-03T11:32:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMN-KqM6eLtK4",
          "commit": {
            "abbreviatedOid": "6ff2bdc"
          },
          "author": "wtoorop",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-03-03T11:37:26Z",
          "updatedAt": "2025-03-03T11:37:27Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "```suggestion\r\nIt introduces an element of dynamism which is at the time of writing not part of authoritative name server behavior specification.\r\n```",
              "createdAt": "2025-03-03T11:37:26Z",
              "updatedAt": "2025-03-03T11:37:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMN-KqM6eMHTf",
          "commit": {
            "abbreviatedOid": "4647e10"
          },
          "author": "Philip-NLnetLabs",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-03-03T12:21:20Z",
          "updatedAt": "2025-03-03T12:21:20Z",
          "comments": []
        }
      ]
    },
    {
      "number": 14,
      "id": "PR_kwDOMN-KqM6NG4We",
      "title": "first pass on security considerations",
      "url": "https://github.com/NLnetLabs/incremental-deleg/pull/14",
      "state": "MERGED",
      "author": "moonshiner",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-03-03T07:33:06Z",
      "updatedAt": "2025-03-03T15:12:02Z",
      "baseRepository": "NLnetLabs/incremental-deleg",
      "baseRefName": "main",
      "baseRefOid": "c7e42f64d219b2d38c3b71a3c3300f35853a8f47",
      "headRepository": "moonshiner/incremental-deleg",
      "headRefName": "main",
      "headRefOid": "a412ca42f3770b3dce64297bf315438be8f282ca",
      "closedAt": "2025-03-03T15:12:02Z",
      "mergedAt": "2025-03-03T15:12:01Z",
      "mergedBy": "moonshiner",
      "mergeCommit": {
        "oid": "28ff94a2f6df6fb520286a77a2ce933248c760c9"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOMN-KqM6eMP1x",
          "commit": {
            "abbreviatedOid": "cba1432"
          },
          "author": "wtoorop",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "Looks good to me!",
          "createdAt": "2025-03-03T12:36:00Z",
          "updatedAt": "2025-03-03T12:36:00Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOMN-KqM6eMa_z",
          "commit": {
            "abbreviatedOid": "cba1432"
          },
          "author": "Philip-NLnetLabs",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-03-03T12:54:41Z",
          "updatedAt": "2025-03-03T12:54:42Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "Maybe we should add: \r\n\r\nthis risk of domain hijacking is not expected to increase significantly compared to the situation without incremental deleg.",
              "createdAt": "2025-03-03T12:54:41Z",
              "updatedAt": "2025-03-03T12:54:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMN-KqM6eMdB2",
          "commit": {
            "abbreviatedOid": "cba1432"
          },
          "author": "Philip-NLnetLabs",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-03-03T12:58:32Z",
          "updatedAt": "2025-03-03T12:58:32Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nIncremental deleg moves the location of  referral information to a unique  location that currently exists. However, as this is a new approach, thought must be given to usage.   In domains that are open to registration by third parties, care must be taken to ensure that the _deleg subdomain is reserved at the time the domain is provisioned. The same care needs to be addressed when a domain is deprovisioned that the _deleg reservation is removed.  This is similar to what happens to NS A records deployed in parent zones to act as Glue.\r\n```",
              "createdAt": "2025-03-03T12:58:32Z",
              "updatedAt": "2025-03-03T12:58:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMN-KqM6eMxII",
          "commit": {
            "abbreviatedOid": "cba1432"
          },
          "author": "wtoorop",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-03-03T13:35:14Z",
          "updatedAt": "2025-03-03T13:35:15Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "```suggestion\r\nWhile the recommendation is to deploy DNSSEC with incremental deleg, it is not mandatory.  However, using incremental deleg with unsigned zones can create possibilities of domain hijackings. This could  be hard to detect when not speaking directly to the authoritative name server.\r\nThis risk of domain hijacking is not expected to increase significantly compared to the situation without incremental deleg.\r\n```",
              "createdAt": "2025-03-03T13:35:15Z",
              "updatedAt": "2025-03-03T13:35:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMN-KqM6eNTE_",
          "commit": {
            "abbreviatedOid": "cba1432"
          },
          "author": "wtoorop",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-03-03T14:27:22Z",
          "updatedAt": "2025-03-03T14:27:23Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "Added in commit a412ca4 ",
              "createdAt": "2025-03-03T14:27:23Z",
              "updatedAt": "2025-03-03T14:27:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMN-KqM6eNVOo",
          "commit": {
            "abbreviatedOid": "cba1432"
          },
          "author": "wtoorop",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-03-03T14:30:08Z",
          "updatedAt": "2025-03-03T14:30:09Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "I like this suggestion. Should we wait for @moonshiner to commit it?",
              "createdAt": "2025-03-03T14:30:08Z",
              "updatedAt": "2025-03-03T14:30:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMN-KqM6eNXu4",
          "commit": {
            "abbreviatedOid": "cba1432"
          },
          "author": "Philip-NLnetLabs",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-03-03T14:33:34Z",
          "updatedAt": "2025-03-03T14:33:34Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Yes (unless we get too close to midnight)",
              "createdAt": "2025-03-03T14:33:34Z",
              "updatedAt": "2025-03-03T14:33:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMN-KqM6eNlG0",
          "commit": {
            "abbreviatedOid": "cba1432"
          },
          "author": "moonshiner",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-03-03T14:50:58Z",
          "updatedAt": "2025-03-03T14:50:58Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "yes. ",
              "createdAt": "2025-03-03T14:50:58Z",
              "updatedAt": "2025-03-03T14:50:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMN-KqM6eNliL",
          "commit": {
            "abbreviatedOid": "cba1432"
          },
          "author": "moonshiner",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-03-03T14:51:24Z",
          "updatedAt": "2025-03-03T14:51:24Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "COMMIT NOW",
              "createdAt": "2025-03-03T14:51:24Z",
              "updatedAt": "2025-03-03T14:51:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMN-KqM6eNpCh",
          "commit": {
            "abbreviatedOid": "a412ca4"
          },
          "author": "Philip-NLnetLabs",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-03-03T14:55:49Z",
          "updatedAt": "2025-03-03T14:55:49Z",
          "comments": []
        }
      ]
    },
    {
      "number": 15,
      "id": "PR_kwDOMN-KqM6Ndm80",
      "title": "Fixes for typos and example records",
      "url": "https://github.com/NLnetLabs/incremental-deleg/pull/15",
      "state": "MERGED",
      "author": "gthess",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Since I went through the document I may as well create a PR.",
      "createdAt": "2025-03-05T11:46:11Z",
      "updatedAt": "2025-03-10T09:03:22Z",
      "baseRepository": "NLnetLabs/incremental-deleg",
      "baseRefName": "main",
      "baseRefOid": "7efb89d96dd271d0292aafd9640bb516afc364cf",
      "headRepository": "NLnetLabs/incremental-deleg",
      "headRefName": "yorgos-typos-03",
      "headRefOid": "57b59733e36b19c33f88276ec920b9b18d387696",
      "closedAt": "2025-03-09T11:09:32Z",
      "mergedAt": "2025-03-09T11:09:32Z",
      "mergedBy": "wtoorop",
      "mergeCommit": {
        "oid": "4532660f6cde4d0dae905246c4f4d6505f74bc80"
      },
      "comments": [
        {
          "author": "moonshiner",
          "authorAssociation": "COLLABORATOR",
          "body": "I believe I merged Havard's PR before this one so there is a conflict.  \r\nCould y'all tweak your PR slightly?  Also I can",
          "createdAt": "2025-03-08T23:19:16Z",
          "updatedAt": "2025-03-08T23:19:16Z"
        },
        {
          "author": "wtoorop",
          "authorAssociation": "MEMBER",
          "body": "> I believe I merged Havard's PR before this one so there is a conflict.\r\n> Could y'all tweak your PR slightly? Also I can\r\n\r\nDone!\r\n\r\nI'll just merge, because all suggestions were good.",
          "createdAt": "2025-03-09T11:09:28Z",
          "updatedAt": "2025-03-09T11:09:28Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOMN-KqM6fG8DE",
          "commit": {
            "abbreviatedOid": "debe889"
          },
          "author": "wtoorop",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "Thanks! These all look like good changes! Especially good you found the missing RRSIG for the authoritative NS RRset!",
          "createdAt": "2025-03-09T11:07:00Z",
          "updatedAt": "2025-03-09T11:07:00Z",
          "comments": []
        }
      ]
    },
    {
      "number": 16,
      "id": "PR_kwDOMN-KqM6N396i",
      "title": "Grammar and wording nit",
      "url": "https://github.com/NLnetLabs/incremental-deleg/pull/16",
      "state": "MERGED",
      "author": "he32",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": " * Correction of a/an usage\r\n * Addition of some hyphens to clarify meaning\r\n * Some other minor wording change suggestions",
      "createdAt": "2025-03-08T15:56:06Z",
      "updatedAt": "2025-03-08T19:17:23Z",
      "baseRepository": "NLnetLabs/incremental-deleg",
      "baseRefName": "main",
      "baseRefOid": "f1ae9e260439bba888f5fb8dde82210026475406",
      "headRepository": "he32/incremental-deleg",
      "headRefName": "spell-and-grammar",
      "headRefOid": "d3cc5cbbcd26b7b70bb95c489a9d2b0135f426f1",
      "closedAt": "2025-03-08T19:17:23Z",
      "mergedAt": "2025-03-08T19:17:23Z",
      "mergedBy": "moonshiner",
      "mergeCommit": {
        "oid": "7efb89d96dd271d0292aafd9640bb516afc364cf"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 18,
      "id": "PR_kwDOMN-KqM6N-nd3",
      "title": "Suggestions from H\u00e5vard Eidnes",
      "url": "https://github.com/NLnetLabs/incremental-deleg/pull/18",
      "state": "MERGED",
      "author": "wtoorop",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "I like all these suggestions. @moonshiner and @Philip-NLnetLabs, please approve if you like them too.",
      "createdAt": "2025-03-10T11:32:02Z",
      "updatedAt": "2025-03-13T13:20:38Z",
      "baseRepository": "NLnetLabs/incremental-deleg",
      "baseRefName": "main",
      "baseRefOid": "8515030361227919d13d1c96d157aac3edbf659e",
      "headRepository": "NLnetLabs/incremental-deleg",
      "headRefName": "suggestions-from-h\u00e5vard",
      "headRefOid": "9aac6a778ccd03817a83ece0fea6a7f04139a7d0",
      "closedAt": "2025-03-13T13:20:38Z",
      "mergedAt": "2025-03-13T13:20:38Z",
      "mergedBy": "wtoorop",
      "mergeCommit": {
        "oid": "dd13629c6c9e6d6466f3cf71f4ccf5867639d60f"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOMN-KqM6f0ci-",
          "commit": {
            "abbreviatedOid": "9aac6a7"
          },
          "author": "moonshiner",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-03-13T10:24:06Z",
          "updatedAt": "2025-03-13T10:24:06Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOMN-KqM6f2gvy",
          "commit": {
            "abbreviatedOid": "9aac6a7"
          },
          "author": "Philip-NLnetLabs",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-03-13T13:15:19Z",
          "updatedAt": "2025-03-13T13:15:19Z",
          "comments": []
        }
      ]
    },
    {
      "number": 19,
      "id": "PR_kwDOMN-KqM6N-thD",
      "title": "Suggestions from Stephane Bortzmeyer",
      "url": "https://github.com/NLnetLabs/incremental-deleg/pull/19",
      "state": "MERGED",
      "author": "wtoorop",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "@moonshiner and @Philip-NLnetLabs , please approve if you approve, or comment or make suggestions otherwise.",
      "createdAt": "2025-03-10T11:43:16Z",
      "updatedAt": "2025-03-13T12:45:00Z",
      "baseRepository": "NLnetLabs/incremental-deleg",
      "baseRefName": "main",
      "baseRefOid": "8515030361227919d13d1c96d157aac3edbf659e",
      "headRepository": "NLnetLabs/incremental-deleg",
      "headRefName": "suggestions-from-stephane",
      "headRefOid": "2632df0cb04f60fa05f1d8d5419a635afb03489d",
      "closedAt": "2025-03-13T12:45:00Z",
      "mergedAt": "2025-03-13T12:45:00Z",
      "mergedBy": "wtoorop",
      "mergeCommit": {
        "oid": "4fb0fe0eb245856deba42e0acd64416614b4c618"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOMN-KqM6fMt6j",
          "commit": {
            "abbreviatedOid": "f2395f2"
          },
          "author": "Philip-NLnetLabs",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-03-10T13:13:02Z",
          "updatedAt": "2025-03-10T13:13:02Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOMN-KqM6fRN8f",
          "commit": {
            "abbreviatedOid": "f2395f2"
          },
          "author": "wtoorop",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-03-10T20:13:16Z",
          "updatedAt": "2025-03-10T20:13:16Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\n| Requires implementation in both authoritative name server as well as in the resolver, DNSSEC signers and validators and all other DNS software | Only implementation required for functionalities following the delegations (like in resolvers). No support from the authoritative name server, DNSSEC signers or validators are needed. But optimized with updated authoritative software. |\r\n```",
              "createdAt": "2025-03-10T20:13:16Z",
              "updatedAt": "2025-03-10T20:13:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMN-KqM6f0cpX",
          "commit": {
            "abbreviatedOid": "2632df0"
          },
          "author": "moonshiner",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-03-13T10:24:17Z",
          "updatedAt": "2025-03-13T10:24:17Z",
          "comments": []
        }
      ]
    },
    {
      "number": 20,
      "id": "PR_kwDOMN-KqM6N_Lxy",
      "title": "Try to fix github actions, by updating the i-d-template",
      "url": "https://github.com/NLnetLabs/incremental-deleg/pull/20",
      "state": "MERGED",
      "author": "wtoorop",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-03-10T12:34:16Z",
      "updatedAt": "2025-03-10T12:36:06Z",
      "baseRepository": "NLnetLabs/incremental-deleg",
      "baseRefName": "main",
      "baseRefOid": "558b861caf222b2fc0c82a6e2c83bc6fdd53a469",
      "headRepository": "NLnetLabs/incremental-deleg",
      "headRefName": "fix-github-actions",
      "headRefOid": "fff35765918b941d184aa90cc6526022eee7af58",
      "closedAt": "2025-03-10T12:35:39Z",
      "mergedAt": "2025-03-10T12:35:39Z",
      "mergedBy": "wtoorop",
      "mergeCommit": {
        "oid": "8515030361227919d13d1c96d157aac3edbf659e"
      },
      "comments": [
        {
          "author": "moonshiner",
          "authorAssociation": "COLLABORATOR",
          "body": "YES",
          "createdAt": "2025-03-10T12:36:04Z",
          "updatedAt": "2025-03-10T12:36:04Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 22,
      "id": "PR_kwDOMN-KqM6OqCkd",
      "title": "\"all other software\" is a bit broad",
      "url": "https://github.com/NLnetLabs/incremental-deleg/pull/22",
      "state": "MERGED",
      "author": "wtoorop",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "As remarked by @pspacek on the dd list.\r\n@Philip-NLnetLabs and @moonshiner can you approve if you agree? Thanks!",
      "createdAt": "2025-03-14T11:07:44Z",
      "updatedAt": "2025-03-15T22:37:57Z",
      "baseRepository": "NLnetLabs/incremental-deleg",
      "baseRefName": "main",
      "baseRefOid": "b1f37d0c6703e33377eb01e04e6a70170cd915d2",
      "headRepository": "NLnetLabs/incremental-deleg",
      "headRefName": "comment-from-petr",
      "headRefOid": "53f1ffb4599b73dd6cabf58cd0aa763611de7ef3",
      "closedAt": "2025-03-15T22:37:57Z",
      "mergedAt": "2025-03-15T22:37:57Z",
      "mergedBy": "moonshiner",
      "mergeCommit": {
        "oid": "0f3f7ec9b47e44cf1c2b1647a8d9290348bfb5d8"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOMN-KqM6gF0vF",
          "commit": {
            "abbreviatedOid": "53f1ffb"
          },
          "author": "Philip-NLnetLabs",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-03-14T15:11:33Z",
          "updatedAt": "2025-03-14T15:11:33Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOMN-KqM6gPe5A",
          "commit": {
            "abbreviatedOid": "53f1ffb"
          },
          "author": "moonshiner",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-03-15T22:37:53Z",
          "updatedAt": "2025-03-15T22:37:53Z",
          "comments": []
        }
      ]
    },
    {
      "number": 23,
      "id": "PR_kwDOMN-KqM6PoPu9",
      "title": "Fewer queries",
      "url": "https://github.com/NLnetLabs/incremental-deleg/pull/23",
      "state": "MERGED",
      "author": "Philip-NLnetLabs",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-03-21T14:34:26Z",
      "updatedAt": "2025-04-02T12:59:07Z",
      "baseRepository": "NLnetLabs/incremental-deleg",
      "baseRefName": "main",
      "baseRefOid": "77da1fd47a6a261b17ea68828d73739b9719ac2e",
      "headRepository": "NLnetLabs/incremental-deleg",
      "headRefName": "fewer-packets",
      "headRefOid": "5879efcc2035f2eb06ce12b24c83100ac00ad7a1",
      "closedAt": "2025-04-02T12:59:07Z",
      "mergedAt": "2025-04-02T12:59:07Z",
      "mergedBy": "wtoorop",
      "mergeCommit": {
        "oid": "e1f9447fa3522346084dbaed1331ea9a6fc58653"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOMN-KqM6jEAXm",
          "commit": {
            "abbreviatedOid": "c808531"
          },
          "author": "wtoorop",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "Yes, makes sense",
          "createdAt": "2025-04-02T10:04:23Z",
          "updatedAt": "2025-04-02T10:26:06Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "```suggestion\r\nIf the state of the zone is known (the `_deleg.<apex>` is known to exist or not to exist), then queries are executed as\r\n```",
              "createdAt": "2025-04-02T10:04:23Z",
              "updatedAt": "2025-04-02T10:26:06Z"
            },
            {
              "originalPosition": 4,
              "body": "```suggestion\r\n# Fewer queries {#fewer-queries}\r\n```\r\nFor referencing this from the table in Section 9",
              "createdAt": "2025-04-02T10:24:08Z",
              "updatedAt": "2025-04-02T10:26:06Z"
            }
          ]
        }
      ]
    },
    {
      "number": 25,
      "id": "PR_kwDOMN-KqM6RBVr3",
      "title": "removed comparisons, set aside",
      "url": "https://github.com/NLnetLabs/incremental-deleg/pull/25",
      "state": "MERGED",
      "author": "moonshiner",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Pulled out the compasrison section but saved it as its own file for now.  still sueful text",
      "createdAt": "2025-04-02T03:28:25Z",
      "updatedAt": "2025-04-02T11:57:13Z",
      "baseRepository": "NLnetLabs/incremental-deleg",
      "baseRefName": "main",
      "baseRefOid": "bb747ce6800a2581ef1709797b8b74a7219ac9a7",
      "headRepository": "moonshiner/incremental-deleg",
      "headRefName": "rm-comparisons",
      "headRefOid": "e073decbd44f3f19e66bd65cf532988cf00cf5f0",
      "closedAt": "2025-04-02T11:57:13Z",
      "mergedAt": "2025-04-02T11:57:13Z",
      "mergedBy": "wtoorop",
      "mergeCommit": {
        "oid": "97307a070ad3c8a479ba769525035c029197ab01"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOMN-KqM6jDt6s",
          "commit": {
            "abbreviatedOid": "e073dec"
          },
          "author": "wtoorop",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "Perfect.",
          "createdAt": "2025-04-02T09:38:49Z",
          "updatedAt": "2025-04-02T09:38:49Z",
          "comments": []
        }
      ]
    },
    {
      "number": 26,
      "id": "PR_kwDOMN-KqM6RFmU4",
      "title": "Remove the term incremental",
      "url": "https://github.com/NLnetLabs/incremental-deleg/pull/26",
      "state": "MERGED",
      "author": "wtoorop",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-04-02T13:08:57Z",
      "updatedAt": "2025-04-02T13:42:19Z",
      "baseRepository": "NLnetLabs/incremental-deleg",
      "baseRefName": "main",
      "baseRefOid": "e1f9447fa3522346084dbaed1331ea9a6fc58653",
      "headRepository": "NLnetLabs/incremental-deleg",
      "headRefName": "remove-incremental",
      "headRefOid": "bd2763db39b54e37183d18a522440802d5577a8b",
      "closedAt": "2025-04-02T13:42:18Z",
      "mergedAt": "2025-04-02T13:42:18Z",
      "mergedBy": "wtoorop",
      "mergeCommit": {
        "oid": "2782ef120cba4da228535d01d8dd44cbd054a0f5"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOMN-KqM6jGHBi",
          "commit": {
            "abbreviatedOid": "e51d7cd"
          },
          "author": "Philip-NLnetLabs",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-04-02T13:29:43Z",
          "updatedAt": "2025-04-02T13:29:43Z",
          "comments": [
            {
              "originalPosition": 50,
              "body": "```suggestion\r\n  With deleg, this is the location given by the IDELEG delegating name.\r\n```",
              "createdAt": "2025-04-02T13:29:43Z",
              "updatedAt": "2025-04-02T13:32:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMN-KqM6jGK1S",
          "commit": {
            "abbreviatedOid": "472c447"
          },
          "author": "Philip-NLnetLabs",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-04-02T13:34:36Z",
          "updatedAt": "2025-04-02T13:34:36Z",
          "comments": [
            {
              "originalPosition": 172,
              "body": "```suggestion\r\n   For the period the non-existence of the `_deleg` label is registered, the label is \"known not to be present\" and the resolver SHOULD NOT send any (additional) deleg queries.\r\n```",
              "createdAt": "2025-04-02T13:34:36Z",
              "updatedAt": "2025-04-02T13:34:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMN-KqM6jGLj6",
          "commit": {
            "abbreviatedOid": "472c447"
          },
          "author": "Philip-NLnetLabs",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-04-02T13:35:35Z",
          "updatedAt": "2025-04-02T13:35:35Z",
          "comments": [
            {
              "originalPosition": 177,
              "body": "```suggestion\r\n   The existence of the `_deleg` name MUST be registered for the duration indicated by the \"minimum\" RDATA field of the SOA resource record in the authority section, adjusted to the resolver's TTL boundaries.\r\n```",
              "createdAt": "2025-04-02T13:35:35Z",
              "updatedAt": "2025-04-02T13:35:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMN-KqM6jGLxr",
          "commit": {
            "abbreviatedOid": "472c447"
          },
          "author": "Philip-NLnetLabs",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-04-02T13:35:52Z",
          "updatedAt": "2025-04-02T13:35:52Z",
          "comments": [
            {
              "originalPosition": 179,
              "body": "```suggestion\r\n   For the period the existence of the empty non-terminal at the `_deleg` label is registered, the label is \"known to be present\" and the resolver MUST send additional deleg queries as described in {{recursive-resolver-behavior}}.\r\n```",
              "createdAt": "2025-04-02T13:35:52Z",
              "updatedAt": "2025-04-02T13:35:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMN-KqM6jGMgl",
          "commit": {
            "abbreviatedOid": "472c447"
          },
          "author": "Philip-NLnetLabs",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-04-02T13:36:49Z",
          "updatedAt": "2025-04-02T13:36:49Z",
          "comments": [
            {
              "originalPosition": 208,
              "body": "```suggestion\r\n{: #deleg-response title=\"A deleg referral response\"}\r\n```",
              "createdAt": "2025-04-02T13:36:49Z",
              "updatedAt": "2025-04-02T13:36:49Z"
            }
          ]
        }
      ]
    },
    {
      "number": 27,
      "id": "PR_kwDOMN-KqM6RG976",
      "title": "Rearranged sections to talk about auth support first",
      "url": "https://github.com/NLnetLabs/incremental-deleg/pull/27",
      "state": "MERGED",
      "author": "wtoorop",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-04-02T15:17:22Z",
      "updatedAt": "2025-04-03T11:50:07Z",
      "baseRepository": "NLnetLabs/incremental-deleg",
      "baseRefName": "main",
      "baseRefOid": "2782ef120cba4da228535d01d8dd44cbd054a0f5",
      "headRepository": "NLnetLabs/incremental-deleg",
      "headRefName": "rearrange-sections",
      "headRefOid": "1390a0fb99887a80e9db2381c942e55e27569cd0",
      "closedAt": "2025-04-03T11:50:07Z",
      "mergedAt": "2025-04-03T11:50:07Z",
      "mergedBy": "wtoorop",
      "mergeCommit": {
        "oid": "7dada59cad67d5f36b3a62f2dcd3773a0a5a4548"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOMN-KqM6jNxNf",
          "commit": {
            "abbreviatedOid": "322aefc"
          },
          "author": "moonshiner",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "I see some smol edits but they can wait ",
          "createdAt": "2025-04-03T03:13:54Z",
          "updatedAt": "2025-04-03T03:13:54Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOMN-KqM6jSeaL",
          "commit": {
            "abbreviatedOid": "1390a0f"
          },
          "author": "Philip-NLnetLabs",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-04-03T11:32:03Z",
          "updatedAt": "2025-04-03T11:32:03Z",
          "comments": []
        }
      ]
    }
  ]
}